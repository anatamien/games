import React from 'react';

function InventoryScreen() {
  const { gameState, setScreen } = window.useGameState();

  const inventoryItems = [
    {
      key: 'commonFish',
      name: '–°–µ—Ä–µ–±—Ä–∏—Å—Ç–∞—è –ø–ª–æ—Ç–≤–∞',
      description: '–û–±—ã—á–Ω–∞—è —Ä—ã–±–∞ —Ç–∏—Ö–∏—Ö –≤–æ–¥',
      icon: 'üêü',
      rarity: 'common',
      value: 1
    },
    {
      key: 'rareFish',
      name: '–ó–æ–ª–æ—Ç–∞—è –º–∞–∫—Ä–µ–ª—å',
      description: '–†–µ–¥–∫–∞—è —Ä—ã–±–∞ —Ä–∏—Ñ–æ–≤—ã—Ö –≥–ª—É–±–∏–Ω',
      icon: 'üê†',
      rarity: 'rare',
      value: 10
    },
    {
      key: 'legendaryFish',
      name: '–î—Ä–∞–∫–æ–Ω –º–æ—Ä—Å–∫–∏—Ö –≥–ª—É–±–∏–Ω',
      description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑–¥–Ω—ã',
      icon: 'üêâ',
      rarity: 'legendary',
      value: 100
    },
    {
      key: 'corals',
      name: '–ü–µ—Ä–ª–∞–º—É—Ç—Ä–æ–≤—ã–π –∫–æ—Ä–∞–ª–ª',
      description: '–ñ–∏–≤–æ–π –∫–æ—Ä–∞–ª–ª —Å —Ä–∏—Ñ–æ–≤',
      icon: 'ü™∏',
      rarity: 'rare',
      value: 5
    },
    {
      key: 'seashells',
      name: '–†–∞–∫–æ–≤–∏–Ω–∞ —Ä—É—Å–∞–ª–∫–∏',
      description: '–®–µ–ø—á–µ—Ç –ø–µ—Å–Ω–∏ –≥–ª—É–±–∏–Ω',
      icon: 'üêö',
      rarity: 'common',
      value: 2
    }
  ];

  const rarityColors = {
    common: 'text-gray-300 border-gray-500',
    rare: 'text-blue-300 border-blue-500',
    legendary: 'text-yellow-300 border-yellow-500'
  };

  const formatNumber = (num) => {
    if (num >= 1000000) return (num / 1000000).toFixed(1) + '–ú';
    if (num >= 1000) return (num / 1000).toFixed(1) + '–ö';
    return num.toString();
  };

  const getTotalValue = () => {
    return inventoryItems.reduce((total, item) => {
      const count = gameState.inventory[item.key] || 0;
      return total + (count * item.value);
    }, 0);
  };

  const sellAll = () => {
    // This would need to be implemented in the game state
    console.log('Selling all items for', getTotalValue(), 'fish');
  };

  return (
    <div className="w-full h-screen bg-gradient-to-b from-blue-900 to-blue-800 overflow-hidden">
      {/* Header */}
      <div className="bg-black bg-opacity-50 p-4 border-b-2 border-cyan-300">
        <div className="flex items-center justify-between">
          <h1 className="pixel-font text-2xl text-cyan-300">–ò–ù–í–ï–ù–¢–ê–†–¨</h1>
          <button
            onClick={() => setScreen('game')}
            className="retro-button px-4 py-2 pixel-font text-white text-sm rounded"
          >
            –ù–∞–∑–∞–¥
          </button>
        </div>
        
        {/* Resources */}
        <div className="flex space-x-6 mt-3 text-white pixel-font">
          <div className="flex items-center space-x-1">
            <span className="text-cyan-300">üêü</span>
            <span>{formatNumber(gameState.fish)}</span>
          </div>
          <div className="flex items-center space-x-1">
            <span className="text-pink-300">‚óã</span>
            <span>{formatNumber(gameState.pearls)}</span>
          </div>
          <div className="flex items-center space-x-1">
            <span className="text-yellow-300">üíé</span>
            <span>{formatNumber(gameState.artifacts)}</span>
          </div>
        </div>
      </div>

      {/* Inventory Grid */}
      <div className="flex-1 overflow-y-auto p-4">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6">
          {inventoryItems.map((item) => {
            const count = gameState.inventory[item.key] || 0;
            const totalValue = count * item.value;

            return (
              <div
                key={item.key}
                className={`bg-black bg-opacity-40 border-2 rounded p-4 transition-all duration-200 ${
                  count > 0 ? `${rarityColors[item.rarity]} pixel-glow` : 'border-gray-700 opacity-50'
                }`}
              >
                <div className="text-center">
                  <div className="text-4xl mb-3">{item.icon}</div>
                  <h3 className="pixel-font text-lg text-white mb-2">{item.name}</h3>
                  <p className="pixel-font text-xs text-gray-400 mb-3 leading-relaxed">
                    {item.description}
                  </p>
                  
                  <div className="space-y-2">
                    <div className="bg-gray-800 bg-opacity-50 rounded p-2">
                      <div className="pixel-font text-sm">
                        <div className="text-gray-400">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</div>
                        <div className="text-cyan-300 text-lg font-bold">
                          {formatNumber(count)}
                        </div>
                      </div>
                    </div>
                    
                    {count > 0 && (
                      <div className="bg-gray-800 bg-opacity-50 rounded p-2">
                        <div className="pixel-font text-sm">
                          <div className="text-gray-400">–û–±—â–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å:</div>
                          <div className="text-yellow-300">
                            üêü {formatNumber(totalValue)}
                          </div>
                        </div>
                      </div>
                    )}
                    
                    <div className="bg-gray-800 bg-opacity-50 rounded p-2">
                      <div className="pixel-font text-xs">
                        <div className="text-gray-400">–†–µ–¥–∫–æ—Å—Ç—å:</div>
                        <div className={rarityColors[item.rarity].split(' ')[0]}>
                          {item.rarity === 'common' && '–û–±—ã—á–Ω–∞—è'}
                          {item.rarity === 'rare' && '–†–µ–¥–∫–∞—è'}
                          {item.rarity === 'legendary' && '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è'}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            );
          })}
        </div>

        {/* Haiku Achievement Examples */}
        <div className="bg-black bg-opacity-40 border-2 border-purple-500 rounded p-4 mb-4">
          <h3 className="pixel-font text-lg text-purple-300 mb-3 text-center">
            üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ —Å—Ç–∏–ª–µ —Ö–∞–π–∫—É
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-center">
            <div className="bg-gray-800 bg-opacity-50 rounded p-3">
              <div className="pixel-font text-sm text-cyan-300 mb-2">
                –ü–æ–π–º–∞–Ω–æ 100 —Ä—ã–±
              </div>
              <div className="pixel-font text-xs text-gray-300 italic leading-relaxed">
                "–¢–∏—à–∏–Ω–∞ –ø–æ–¥ –≤–µ—Ç—Ä–æ–º —Å–ø–∏—Ç.<br/>
                –õ–æ–¥–∫–∞ –∫–∞—á–Ω—É–ª–∞—Å—å.<br/>
                –°—Ç–æ —Ä—ã–± –≤ —Å–µ—Ç—è—Ö."
              </div>
            </div>
            
            <div className="bg-gray-800 bg-opacity-50 rounded p-3">
              <div className="pixel-font text-sm text-pink-300 mb-2">
                –ù–∞–π–¥–µ–Ω –ø–µ—Ä–≤—ã–π –∂–µ–º—á—É–≥
              </div>
              <div className="pixel-font text-xs text-gray-300 italic leading-relaxed">
                "–ú–æ—Ä—Å–∫–∞—è —Å–ª–µ–∑–∞.<br/>
                –°–≤–µ—Ç –≤ —Ç–µ–º–Ω–æ—Ç–µ –≥–ª—É–±–∏–Ω—ã.<br/>
                –¢–∞–π–Ω–∞ —Ö—Ä–∞–Ω–∏—Ç—Å—è."
              </div>
            </div>
          </div>
        </div>

        {/* Encyclopedia Section */}
        <div className="bg-black bg-opacity-40 border-2 border-green-500 rounded p-4">
          <h3 className="pixel-font text-lg text-green-300 mb-3 text-center">
            üìö –≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è –æ–∫–µ–∞–Ω–∞
          </h3>
          <div className="space-y-3">
            <div className="bg-gray-800 bg-opacity-50 rounded p-3">
              <div className="pixel-font text-sm text-yellow-300 mb-1">üêü –û —Ä—ã–±–∞—Ö</div>
              <div className="pixel-font text-xs text-gray-300">
                "–í —Ç–∏—Ö–∏—Ö –≤–æ–¥–∞—Ö –ø–ª–µ—â—É—Ç—Å—è —Å–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–µ –¥—É—à–∏ –æ–∫–µ–∞–Ω–∞, –∫–∞–∂–¥–∞—è –Ω–µ—Å–µ—Ç —Å–≤–æ—é –ø–µ—Å–Ω—é."
              </div>
            </div>
            
            <div className="bg-gray-800 bg-opacity-50 rounded p-3">
              <div className="pixel-font text-sm text-pink-300 mb-1">‚óã –û –∂–µ–º—á—É–≥–µ</div>
              <div className="pixel-font text-xs text-gray-300">
                "–°–ª–µ–∑—ã –º–æ—Ä—è, –∑–∞—Å—Ç—ã–≤—à–∏–µ –≤ —Ä–∞–∫–æ–≤–∏–Ω–∞—Ö. –•—Ä–∞–Ω—è—Ç –ø–∞–º—è—Ç—å –æ —à—Ç–æ—Ä–º–∞—Ö –∏ —Ç–∏—à–∏–Ω–µ."
              </div>
            </div>
            
            <div className="bg-gray-800 bg-opacity-50 rounded p-3">
              <div className="pixel-font text-sm text-purple-300 mb-1">üåä –û –≥–ª—É–±–∏–Ω–∞—Ö</div>
              <div className="pixel-font text-xs text-gray-300">
                "–ß–µ–º –≥–ª—É–±–∂–µ –æ–ø—É—Å–∫–∞–µ—à—å—Å—è, —Ç–µ–º —è—Å–Ω–µ–µ —Å–ª—ã—à–∏—à—å —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ –æ–∫–µ–∞–Ω–∞."
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Bottom Actions */}
      <div className="bg-black bg-opacity-50 p-4 border-t-2 border-cyan-300">
        <div className="flex justify-between items-center">
          <div className="pixel-font text-white">
            <div className="text-sm text-gray-300">–û–±—â–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è:</div>
            <div className="text-lg">üêü {formatNumber(getTotalValue())}</div>
          </div>
          
          <button
            onClick={sellAll}
            disabled={getTotalValue() === 0}
            className={`px-6 py-3 pixel-font rounded transition-all ${
              getTotalValue() > 0
                ? 'retro-button text-white hover:transform hover:scale-105'
                : 'bg-gray-600 text-gray-400 cursor-not-allowed'
            }`}
          >
            –ü—Ä–æ–¥–∞—Ç—å –≤—Å—ë
          </button>
        </div>
      </div>
    </div>
  );
}

window.InventoryScreen = InventoryScreen;